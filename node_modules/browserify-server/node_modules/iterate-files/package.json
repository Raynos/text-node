{
  "name": "iterate-files",
  "version": "0.1.1",
  "description": "iterate all the files",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/iterate-files.git"
  },
  "main": "index",
  "scripts": {
    "test": "make test"
  },
  "homepage": "https://github.com/Raynos/iterate-files",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/iterate-files/issues",
    "email": "raynos2@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/raynos/iterate-files/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.4"
  },
  "readme": "# iterateFiles\n\nIterate all the files\n\n## Examples\n\nBasic usage:\n\n    var iterateFiles = require(\"iterate-files\"),\n        path = require(\"path\")\n\n    // Load all javascript files in the test folder or any of their sub folders\n    iterateFiles(path.join(process.cwd(), \"./test\"), function (fileName) {\n        // run code for each recursively found js file\n    }, function (err) {\n        // run code when all files have been found recursively\n    }, /.js$/)\n\n## Documentation\n\n### iterateFiles(uri, fileCallback, finishCallback, regexp)\n\nrecursively call the fileCallback for every file in the folder. Calls the \n    finishCallback if all files have been handled or if an err occurs.\n\nOptionally pass in a regexp to match the fileName by. If the regexp fails then\n    the fileCallback will not be called for that file\n        \n## MIT Licenced",
  "_id": "iterate-files@0.1.1",
  "_from": "iterate-files@~0.1.1"
}
